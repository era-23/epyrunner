[build-system]
requires = ["setuptools >= 65", "setuptools_scm[toml] >= 8", "wheel >= 0.29.0"]
build-backend = "setuptools.build_meta"

[project]
name = "epyrunner"
dynamic = ["version"]
license = { file = "LICENCE" }
requires-python = ">=3.9"
readme = "README.md"
authors = [
    { name = "Joel Adams", email = "joel.adams@york.ac.uk" },
    { name = "Ethan Attwood", email = "ethan.attwood@york.ac.uk" },
]
dependencies = [
    "epydeck >= 1.0.0",
    "epyscan >= 0.1.0",
    "sdf-xarray >= 0.1.2",
    "matplotlib >= 3.9.0",
    "IPython >= 8.20.0",
    "numpy >= 2.0.0",
    "scipy >= 1.6.0",
    "pandas >= 2.2.2",
    "quantiphy >= 2.20",
    "scikit-learn >= 1.5.1",
]

[project.optional-dependencies]
docs = [
    "sphinx >= 5.3",
    "sphinx_autodoc_typehints >= 1.19",
    "sphinx-book-theme >= 0.4.0rc1",
    "sphinx-argparse-cli >= 1.10.0",
    "sphinx-inline-tabs",
]
test = ["pytest >= 3.3.0"]
lint = ["ruff"]

[tool.setuptools_scm]
write_to = "src/epyrunner/_version.py"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "PLR2004", # magic-comparison
    "B9",      # flake8-bugbear opinionated warnings
    "PTH123",  # Path.open instead of open
    "PLR0913", # Too many functional arguments (>5)
]
